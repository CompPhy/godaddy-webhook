name: Release Godaddy Webhook Helm Chart
on:
  push:
    tags: [ v* ]
jobs:
  release:
    runs-on: ubuntu-latest
    # if: contains(github.event.head_commit.message, '[to_release]')
    permissions:
      contents: write # for creating Releases .tgz (403 from chart-releaser-action if not set)
      #pages: write # not required for chart-releaser-action

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v3

      - name: Tag chart and image version
        id: tag-chart
        run: |
          TAG_NAME="${{ github.ref_name }}"
          echo "Tag Name: ${TAG_NAME}"
          
          export TAG_VERSION=${TAG_NAME:1}
          echo "Tag version: ${TAG_VERSION}"

          yq '.appVersion = env(TAG_VERSION)' -i ./deploy/charts/godaddy-webhook/Chart.yaml
          yq '.image.tag  = env(TAG_VERSION)' -i ./deploy/charts/godaddy-webhook/values.yaml
          
          git config user.email "github-actions@github.com"
          git config user.name "GitHub Actions"
          git add ./deploy/charts/godaddy-webhook/Chart.yaml
          git add ./deploy/charts/godaddy-webhook/values.yaml
          git commit -m "Update Helm chart version to $TAG_VERSION"
          
          echo "TAG_VERSION=${TAG_VERSION}" >> "${GITHUB_OUTPUT}"
          
          #TODO: Find a better way to psuh on a tag OR to not push a commit on a tag
          git tag -f ${TAG_NAME}
          git push origin --force ${TAG_NAME}

      - name: Login to Quay.io Hub
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_ROBOT_USER }}
          password: ${{ secrets.QUAY_ROBOT_TOKEN }}

      - name: Build the container image
        run: |
          NEW_VERSION="${{ steps.tag-chart.outputs.TAG_VERSION }}"
          docker build -t cert-manager-webhook-godaddy:${NEW_VERSION} -f Dockerfile .

          TAG_ID=$(docker images -q cert-manager-webhook-godaddy:${NEW_VERSION})
          docker tag ${TAG_ID} quay.io/snowdrop/cert-manager-webhook-godaddy:${NEW_VERSION}
          docker push quay.io/snowdrop/cert-manager-webhook-godaddy:${NEW_VERSION}   

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.5.0
        with:
          charts_dir: deploy/charts
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"